FUNCTION_BLOCK FuzzyGhosts	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	BLINKYdistanceToPacman : REAL;
	PacmanDistanceToBLINKY : REAL;
	BLINKYdanger : REAL;
	BLINKYtimeInLair : REAL;
	BLINKYdistanceToTunnel : REAL;
	BLINKYedibleTime : REAL;
	BLINKYcollisionIndex : REAL;
	
	INKYdistanceToPacman : REAL;
	PacmanDistanceToINKY : REAL;
	INKYdanger : REAL;
	INKYtimeInLair : REAL;
	INKYdistanceToTunnel : REAL;
	INKYedibleTime : REAL;
	INKYcollisionIndex : REAL;

	SUEdistanceToPacman : REAL;
	PacmanDistanceToSUE : REAL;
	SUEdanger : REAL;
	SUEtimeInLair : REAL;
	SUEdistanceToTunnel : REAL;
	SUEedibleTime : REAL;
	SUEcollisionIndex : REAL;

	PINKYdistanceToPacman : REAL;
	PacmanDistanceToPINKY : REAL;
	PINKYdanger : REAL;
	PINKYtimeInLair : REAL;
	PINKYdistanceToTunnel : REAL;
	PINKYedibleTime : REAL;
	PINKYcollisionIndex : REAL;


	PacmanConfidence : REAL;
	PacmanDistanceToPPill : REAL;	
	PacmanDistanceToTunnel : REAL;
	GhostsCloseIndex : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	Runaway : REAL;
	GoToPPill: REAL;
END_VAR

FUZZIFY BLINKYdistanceToPacman	
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY PacmanDistanceToBLINKY	
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY BLINKYdanger
	TERM low := (0, 1) (30, 0) ; 
	TERM medium := gauss 50 25;
	TERM high := (70, 0) (100, 1) (200, 1);
END_FUZZIFY 
FUZZIFY BLINKYtimeInLair
	TERM low := (0, 1) (40, 0) ; 
	TERM medium := gauss 50 15;
	TERM high := (60, 0) (80, 1) (200, 1);
END_FUZZIFY 
FUZZIFY BLINKYdistanceToTunnel
	TERM near := (0, 1) (30, 0) ; 
	TERM medium := gauss 50 25;
	TERM far := (70, 0) (100, 1) (200, 1);
END_FUZZIFY
FUZZIFY BLINKYedibleTime
	TERM low := (0, 1) (20, 0) ; 
	TERM medium := gauss 50 30;
	TERM high := (70, 0) (100, 1) (200, 1);
END_FUZZIFY  
FUZZIFY BLINKYcollisionIndex
	TERM low := (0, 1) (50, 0) ; 
	TERM medium := gauss 75 25;
	TERM high := (100, 0) (170, 1) (200, 1);
END_FUZZIFY 

FUZZIFY SUEdistanceToPacman	
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY PacmanDistanceToSUE
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY SUEdanger
	TERM low := (0, 1) (30, 0) ; 
	TERM medium := gauss 50 25;
	TERM high := (70, 0) (100, 1) (200, 1);
END_FUZZIFY 
FUZZIFY SUEtimeInLair
	TERM low := (0, 1) (40, 0) ; 
	TERM medium := gauss 50 15;
	TERM high := (60, 0) (80, 1) (200, 1);
END_FUZZIFY 
FUZZIFY SUEdistanceToTunnel
	TERM near := (0, 1) (30, 0) ; 
	TERM medium := gauss 50 25;
	TERM far := (70, 0) (100, 1) (200, 1);
END_FUZZIFY
FUZZIFY SUEedibleTime
	TERM low := (0, 1) (20, 0) ; 
	TERM medium := gauss 50 30;
	TERM high := (70, 0) (100, 1) (200, 1);
END_FUZZIFY  
FUZZIFY SUEcollisionIndex
	TERM low := (0, 1) (50, 0) ; 
	TERM medium := gauss 75 25;
	TERM high := (100, 0) (170, 1) (200, 1);
END_FUZZIFY 

FUZZIFY PINKYdistanceToPacman	
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY PacmanDistanceToPINKY
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY PINKYdanger
	TERM low := (0, 1) (30, 0) ; 
	TERM medium := gauss 50 25;
	TERM high := (70, 0) (100, 1) (200, 1);
END_FUZZIFY 
FUZZIFY PINKYtimeInLair
	TERM low := (0, 1) (40, 0) ; 
	TERM medium := gauss 50 15;
	TERM high := (60, 0) (80, 1) (200, 1);
END_FUZZIFY 
FUZZIFY PINKYdistanceToTunnel
	TERM near := (0, 1) (30, 0) ; 
	TERM medium := gauss 50 25;
	TERM far := (70, 0) (100, 1) (200, 1);
END_FUZZIFY
FUZZIFY PINKYedibleTime
	TERM low := (0, 1) (20, 0) ; 
	TERM medium := gauss 50 30;
	TERM high := (70, 0) (100, 1) (200, 1);
END_FUZZIFY  
FUZZIFY PINKYcollisionIndex
	TERM low := (0, 1) (50, 0) ; 
	TERM medium := gauss 75 25;
	TERM high := (100, 0) (170, 1) (200, 1);
END_FUZZIFY 

FUZZIFY INKYdistanceToPacman	
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY PacmanDistanceToINKY
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY INKYdanger
	TERM low := (0, 1) (30, 0) ; 
	TERM medium := gauss 50 25;
	TERM high := (70, 0) (100, 1) (200, 1);
END_FUZZIFY 
FUZZIFY INKYtimeInLair
	TERM low := (0, 1) (40, 0) ; 
	TERM medium := gauss 50 15;
	TERM high := (60, 0) (80, 1) (200, 1);
END_FUZZIFY 
FUZZIFY INKYdistanceToTunnel
	TERM near := (0, 1) (30, 0) ; 
	TERM medium := gauss 50 25;
	TERM far := (70, 0) (100, 1) (200, 1);
END_FUZZIFY
FUZZIFY INKYedibleTime
	TERM low := (0, 1) (20, 0) ; 
	TERM medium := gauss 50 30;
	TERM high := (70, 0) (100, 1) (200, 1);
END_FUZZIFY  
FUZZIFY INKYcollisionIndex
	TERM low := (0, 1) (50, 0) ; 
	TERM medium := gauss 75 25;
	TERM high := (100, 0) (170, 1) (200, 1);
END_FUZZIFY 


FUZZIFY PacmanConfidence			
	TERM low := (0,1)(25,1)(50,0) ; 
	TERM medium := gauss 50 25;
	TERM high := (50,0)(75,1)(100,1);
END_FUZZIFY

FUZZIFY PacmanDistanceToPPill			
	TERM near := (0, 1) (60, 0); 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY

FUZZIFY PacmanDistanceToTunnel			
	TERM near := (0, 1) (60, 0); 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY

FUZZIFY GhostsCloseIndex			
	TERM low := (0,1)(40,1)(70,0); 
	TERM medium := gauss 70 30;
	TERM high := (50,0)(100,1)(200,1);
END_FUZZIFY

DEFUZZIFY Runaway			
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		
	DEFAULT := 0;		
END_DEFUZZIFY

DEFUZZIFY GoToPPill			
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		
	DEFAULT := 0;		
END_DEFUZZIFY


RULEBLOCK MsPacManRules
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'MAX' accumulation method (Other options PROBOR and SUM)

	RULE 1 : IF BLINKYdistance IS near AND BLINKYconfidence IS high THEN Runaway IS emergency;
	RULE 2 : IF PINKYdistance IS near AND PINKYconfidence IS high THEN Runaway IS emergency;
	RULE 3 : IF INKYdistance IS near AND INKYconfidence IS high THEN Runaway IS emergency;
	RULE 4 : IF SUEdistance IS near AND SUEconfidence IS high THEN Runaway IS emergency;
	RULE 5 : IF BLINKYconfidence IS medium THEN GoToPPill IS nervious;
	RULE 6 : IF PINKYconfidence IS medium THEN GoToPPill IS nervious;
	RULE 7 : IF INKYconfidence IS medium THEN GoToPPill IS nervious;
	RULE 8 : IF SUEconfidence IS medium THEN GoToPPill IS nervious;
	RULE 9 : IF BLINKYdistance IS far THEN Runaway IS calm;
	RULE 10 : IF PINKYdistance IS far THEN Runaway IS calm;
	RULE 11 : IF INKYdistance IS far THEN Runaway IS calm;
	RULE 12 : IF SUEdistance IS far THEN Runaway IS calm;
END_RULEBLOCK

END_FUNCTION_BLOCK

